<html>
<div class="container">
    <list class="list-container">
        <list-item class="list-item" url="index" onclick="onPageRedirect">
            <image src="rmtj.bin" class="app-icon"></image>
            <text class="maintitle">热门推荐</text>
        </list-item>
        <list-item class="list-item" url="application" onclick="onPageRedirect">
            <image src="shsy.bin" class="app-icon"></image>
            <text class="maintitle">生活实用</text>
        </list-item>
        <list-item class="list-item" url="loading" onclick="onPageRedirect">
            <image src="xxzs.bin" class="app-icon"></image>
            <text class="maintitle">学习助手</text>
        </list-item>
        <list-item class="list-item" url="noData" onclick="onPageRedirect">
            <image src="xxzs.bin" class="app-icon"></image>
            <text class="maintitle">游戏娱乐</text>
        </list-item>
        <list-item class="list-item" url="pay" onclick="onPageRedirect">
            <image src="zhye.bin" class="app-icon"></image>
            <text class="maintitle">账户余额</text>
        </list-item>
    </list>
</div>
</html>
<script>
router = require("@system.router")

export default {
    data: {
        title: 'World',
        increased: true,
        opacity: 0.1,
    },

    onInit: function () {
        print("==========onInit==========")
    },

    onReady: function () {
        print("==========onReady==========")
    },

    onShow: function () {
        print("==========onShow==========")
    },

    onHide: function () {
        print("==========onHide==========")
    },

    onDestroy: function () {
        print("==========onDestroy==========")
    },

    onclick: function () {
        if (this.style['background-color'] != 'transparent') {
            this.style['background-color'] = 'transparent';
        } else {
            this.style['background-color'] = 'red';
        }

        // this.opacity += 0.1;
        // this.style['border-opacity'] = this.opacity
        // this.style['opacity'] = this.opacity

        if (this.increased && this.style['border-width'] < 120) {
            print("=====onclick==+++++++++++++++===", this.style['border-width']);
            this.style['border-width'] += 10;
            this.style['opacity'] += 0.1;
            this.style['border-opacity'] += 0.1
            print("=====onclick==+++++++++++++++===", this.style['border-width']);
        } else {
            this.increased = false;
        }

        if (!this.increased && this.style['border-width'] > 0) {
            this.style['border-width'] -= 10;
            this.style['opacity'] -= 0.1;
            this.style['border-opacity'] -= 0.1
            print("=====onclick==888888888888888888===", this.style['border-width']);
        } else {
            this.increased = true;
        }

        var _b = Number(this.style['border-width'])
        this.title = this.style['border-width'].toString()
        print("=====onclick==xxxxxxxxxxxxxxxxx===");
        // print(this);
        print("=====onclick=====");
    },
    onlongpress: function () {
        print("=====longpress=====");
    },

    onButtonPress: function () {
        print("=====onButtonPress=====");
    },

    onButtonLongPress: function () {
        print("=====onButtonLongPress=====");
    },

    onPageRedirect: function (obj, x, y) {
        print("==========onclick==========")
        print(obj.attributes.url)
        router.push({
            path: obj.attributes.url
        })
    },

    onButtonRelease: function () {
        print("=====onButtonRelease=====");
    },

    onButtonClick: function () {
        print("=====onButtonClick=====");
        print(this.$page)
        show();
    },

    onReturn: function () {
        print("=====onReturn=====");
        router.push({
            path: "evue-dock",
            params: {
                a: 1,
                b: 2
            }
        })
    }
}
</script>
<style>
.container {
    width: 240px;
    height: 240px;
    margin: 0px;
    padding: 0px;
    border-radius: 0px;
    border-width: 0px;
    background-color: black;
}

.list-container {
    width: 240px;
    height: 210px;
    left: 0px;
    top: 30px;
    border-width: 0px;
    background-color: transparent;
}

.list-item {
    width: 240px;
    height: 61px;
    left: 0px;
    border-width: 0px;
    background-color: transparent;
}

.app-icon {
    /* top: 20px; */
    left: 8px;
}

.arrow-icon {
    top: 18px;
    left: 180px;
}

.maintitle {
    top: 21px;
    left: 80px;
    width: 160px;
    height: 50px;
    margin: 0px;
    margin: 0px;
    padding: 0px;
    color: white;
    font-size: 30px;
    /* font-family: simsun; */
    background-color: transparent;
}

.maintitle-note {
    top: 58px;
    left: 160px;
    color: white;
    width: 100px;
    height: 25px;
    font-family: simsun;
    font-size: 20px;
}

.subtitle {
    top: 20px;
    left: 180px;
    color: white;
    width: 100px;
    height: 25px;
    font-family: simsun;
    font-size: 20px;
}
</style>