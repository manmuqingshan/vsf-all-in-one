name: win32

on:
  push:
    paths:
      - '.github/workflows/win32.yml'
      - 'lua/**'
      - 'luat/**'
      - 'components/**'
      - 'bsp/win32/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        Invoke-Expression (Invoke-Webrequest 'https://xmake.io/psget.text' -UseBasicParsing).Content
        cd bsp/win32
        xmake -y
        cd build/out
        Invoke-WebRequest -Uri "https://github.com/openLuat/LuatOS/releases/download/v0.0.1/luat_uart.dll" -OutFile "luat_uart.dll"
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: luatos_win32
        path: bsp/win32/build/out
    - name: report if failure
      if: always()
      env:
        STATUS: ${{ job.status }}
        MQTTADDR: ${{ secrets.MQTTADDR }}
        MQTTPORT: ${{ secrets.MQTTPORT }}
        MQTTTOPIC: ${{ secrets.MQTTTOPIC }}
        DD_APPKEY: ${{ secrets.DD_APPKEY }}
        DD_APPSECRET: ${{ secrets.DD_APPSECRET }}
        DD_NOTIFY_LIST: ${{ secrets.DD_NOTIFY_LIST }}
        DD_API_TOKEN: ${{ secrets.DD_API_TOKEN }}
        DD_API_SEND: ${{ secrets.DD_API_SEND }}
      run: |
        cd tools
        pip install paho-mqtt gitpython requests -t ./
        if($env:STATUS -eq "failure"){ python ciNotify.py $env:MQTTADDR $env:MQTTPORT $env:MQTTTOPIC "https://github.com/openLuat/LuatOS/actions/runs/$GITHUB_RUN_ID" "win32" "$env:DD_APPKEY" "$env:DD_APPSECRET" "$env:DD_NOTIFY_LIST" "$env:DD_API_TOKEN" "$env:DD_API_SEND"; }
